openapi: 3.0.4
info:
  title: CAG.WarehouseManagementSystem
  version: '1.0'
paths:
  /api/v1/Customer:
    get:
      tags:
        - Customer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDto'
    post:
      tags:
        - Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
  /api/v1/Customer/{id}:
    get:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
    put:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerDto'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/v1/Product:
    get:
      tags:
        - Product
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
    post:
      tags:
        - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
  /api/v1/Product/{id}:
    get:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
    put:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/v1/PurchaseOrder:
    get:
      tags:
        - PurchaseOrder
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrderDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrderDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrderDto'
    post:
      tags:
        - PurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
  /api/v1/PurchaseOrder/{id}:
    get:
      tags:
        - PurchaseOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderDto'
  /api/v1/SalesOrder:
    get:
      tags:
        - SalesOrder
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesOrderDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesOrderDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesOrderDto'
    post:
      tags:
        - SalesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesOrderDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SalesOrderDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SalesOrderDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
  /api/v1/SalesOrder/{id}:
    get:
      tags:
        - SalesOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SalesOrderDto'
components:
  schemas:
    CustomerDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
      additionalProperties: false
    OrderDto:
      required:
        - id
        - productId
        - quantity
      type: object
      properties:
        id:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    ProductDto:
      required:
        - dimensions
        - productCode
        - title
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        productCode:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        dimensions:
          type: string
          nullable: true
      additionalProperties: false
    PurchaseOrderDto:
      required:
        - customerId
        - id
        - ordersDto
        - processingDate
      type: object
      properties:
        id:
          type: integer
          format: int32
        processingDate:
          type: string
          format: date-time
        customerId:
          type: integer
          format: int32
        ordersDto:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'
          nullable: true
      additionalProperties: false
    SalesOrderDto:
      required:
        - customerId
        - id
        - ordersDto
        - processingDate
        - shipmentAddress
      type: object
      properties:
        id:
          type: integer
          format: int32
        processingDate:
          type: string
          format: date-time
        customerId:
          type: integer
          format: int32
        ordersDto:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'
          nullable: true
        shipmentAddress:
          type: string
          nullable: true
      additionalProperties: false
    UpdateCustomerDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
      additionalProperties: false
    UpdateProductDto:
      required:
        - dimensions
        - title
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        dimensions:
          type: string
          nullable: true
      additionalProperties: false
